<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文件和异常</title>
      <link href="/2024/06/05/%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
      <url>/2024/06/05/%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<p>文件处理是指在Python程序中对文件进行读取、写入和操作的过程。Python提供了内置的文件操作函数和方法，可以打开文件、读取文件内容、写入文件内容、关闭文件等。常用的文件处理函数包括open()、read()、write()和close()等。文件处理可以用于读取文本文件、处理CSV文件、操作二进制文件等。</p><p>异常处理是指在程序运行过程中遇到错误或异常情况时，通过捕获和处理异常来保证程序的正常执行。Python提供了异常处理机制，可以使用try-except语句来捕获可能发生的异常，然后在except语句块中处理异常。常见的异常类型包括FileNotFoundError（文件不存在错误）、IOError（输入输出错误）、ValueError（值错误）等。通过合理地处理异常，可以使程序更加健壮和可靠。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ try:</span><br><span class="line">    file = open(<span class="string">&quot;example.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)    <span class="comment"># 打开文件</span></span><br><span class="line">    content = file.read()  <span class="comment"># 读取文件内容</span></span><br><span class="line">    <span class="built_in">print</span>(content)</span><br><span class="line">    file.write(<span class="string">&quot;Hello, World!&quot;</span>) <span class="comment"># 写入文件</span></span><br><span class="line">except FileNotFoundError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;文件不存在！&quot;</span>)</span><br><span class="line">except IOError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;文件读写错误！&quot;</span>)</span><br><span class="line">finally:</span><br><span class="line">    file.close() <span class="comment"># 关闭文件</span></span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>编写一程序，在c:\chfile目录下创建文件source1.txt，输入5行字符，文件内容任意（其中包含英文大、小写字符、数字字符 ）。<br>注：若目录不存在，先建立目录（导入os模块）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ import os</span><br><span class="line">dir_path = <span class="string">&quot;c:\\chfile&quot;</span></span><br><span class="line"><span class="keyword">if</span> not os.path.exists(dir_path):</span><br><span class="line">    os.makedirs(dir_path)</span><br><span class="line">white_file = os.path.join(dir_path, <span class="string">&quot;source1.txt&quot;</span>)</span><br><span class="line">with open(white_file, <span class="string">&quot;w&quot;</span>) as file:</span><br><span class="line">    file.write(<span class="string">&quot;hellow\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;id\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;student\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;hahah AI\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;想知道就不告诉你&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;文件 source1.txt 已创建并写入内容&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h2><p>计算运动会某个参赛选手的得分。假设共有10个裁判，每个裁判给该参赛选手打分（分值在0~10分之间），去掉一个最高分和一个最低分之后的平均分即为该运动员的最后得分。某位选手的得分数据如下：<br>9.37  9.56 9.97 10 9.85  9.76 9.85  9.51 9.18 9.93<br>各数据之间使用一个空格分隔。请编写程序从文件中读取该选手的成绩并计算最后得分，并将得分写在文件末。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ with open(<span class="string">&quot;scores.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) as file:</span><br><span class="line">    data = <span class="string">&quot;9.37 9.56 9.97 10 9.85 9.76 9.85 9.51 9.18 9.93&quot;</span></span><br><span class="line">    file.write(data)</span><br><span class="line">with open(<span class="string">&quot;scores.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) as file:</span><br><span class="line">    scores_re = file.readline()</span><br><span class="line">scores = [<span class="built_in">float</span>(score) <span class="keyword">for</span> score <span class="keyword">in</span> scores_re.split()]</span><br><span class="line"><span class="keyword">if</span> len(scores) &gt;= 2:</span><br><span class="line">    min_score = min(scores)</span><br><span class="line">    max_score = max(scores)</span><br><span class="line">    scores.remove(min_score)</span><br><span class="line">    scores.remove(max_score)</span><br><span class="line">    average_score = <span class="built_in">sum</span>(scores) / len(scores)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;该参赛选手的最后得分为:&quot;</span>, average_score)</span><br><span class="line">    with open(<span class="string">&quot;scores.txt&quot;</span>, <span class="string">&quot;a&quot;</span>) as file:</span><br><span class="line">        file.write(<span class="string">&quot;\n最后得分: &quot;</span> + str(average_score))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无法计算最后得分，因为分数数量不足。&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h2><p>文件score1.txt保存了学生的平时成绩和期末成绩，内容如下：<br>学号,平时成绩,期末成绩<br>2022001,86,97<br>2022002,93,85<br>2022003,78,90<br>2022004,79,86<br>2022005,84,89<br>2022006,90,75<br>编写程序读取所有成绩，计算总评成绩(四舍五入到整数)，其中总评成绩&#x3D;平时成绩<em>40%+期末成绩</em>60%。最后按总评成绩降序排列后保存至一个新的文件内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ with open(<span class="string">&quot;score1.txt&quot;</span>, <span class="string">&#x27;w&#x27;</span>) as file:</span><br><span class="line">    file.write(<span class="string">&quot;学号,平时成绩,期末成绩,总评成绩 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;2022001,86,97 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;2022002,93,85\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;2022003,78,90 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;2022004,79,86 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;2022005,84,89\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;2022006,90,75\n&quot;</span>)</span><br><span class="line">scores = []</span><br><span class="line">with open(<span class="string">&quot;score1.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) as file:</span><br><span class="line">    lines = file.readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines[1:]:</span><br><span class="line">        data = line.strip().<span class="built_in">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        <span class="built_in">id</span> = data[0]</span><br><span class="line">        regular = fl(data[1])</span><br><span class="line">        final = int(data[2])</span><br><span class="line">        total = round(regular * 0.4 + final * 0.6)</span><br><span class="line">        scores.append((id, regular, final, total))</span><br><span class="line">scores.sort(key=lambda x: x[3], reverse=True)</span><br><span class="line">with open(<span class="string">&quot;score1.txt&quot;</span>, <span class="string">&#x27;w&#x27;</span>) as file:</span><br><span class="line">    file.write(<span class="string">&quot;学号,平时成绩,期末成绩,总评成绩\n&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> score <span class="keyword">in</span> scores:</span><br><span class="line">        file.write(f<span class="string">&quot;&#123;score[0]&#125;,&#123;score[1]&#125;,&#123;score[2]&#125;,&#123;score[3]&#125;\n&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h2><p>期末考试6名考生3门课程的成绩如下：<br>学号,英语,数学,计算机程序设计<br>20210101,78,90,88<br>20210102,89,77,65<br>20210103,76,87,90<br>20210104,78,80,86<br>20210105,87,90,89<br>20210106,76,89,85 将6位同学的成绩保存至文本文件score.csv，读取score.csv文件内容，计算每位同学的总分，并将总分添加至相应同学的最后列；统计每门课程的平均分，将统计结果写入到文件的末。（注：可以将统计处理后的数据另写入到score1.scv文件）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ with open(<span class="string">&quot;score.csv&quot;</span>, <span class="string">&#x27;w&#x27;</span>) as file:</span><br><span class="line">    file.write(<span class="string">&quot;学号,英语,数学,计算机程序设计 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;20210101,78,90,88 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;20210102,89,77,65\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;20210103,76,87,90 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;20210104,78,80,86 \n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;20210105,87,90,89\n&quot;</span>)</span><br><span class="line">    file.write(<span class="string">&quot;20210106,76,89,85\n&quot;</span>)</span><br><span class="line">scores = []</span><br><span class="line">with open(<span class="string">&quot;score.csv&quot;</span>, <span class="string">&#x27;r&#x27;</span>) as file:</span><br><span class="line">    lines = file.readlines()</span><br><span class="line">    header = lines[0].strip().<span class="built_in">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines[1:]:</span><br><span class="line">        data = line.strip().<span class="built_in">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        user = data[0]</span><br><span class="line">        subject = [int(i) <span class="keyword">for</span> i <span class="keyword">in</span> data[1:]]</span><br><span class="line">        total = <span class="built_in">sum</span>(subject)</span><br><span class="line">        scores.append([user] + data[1:] + [str(total)])</span><br><span class="line">num_subjects = len(header) - 1</span><br><span class="line">avg_scores = [<span class="string">&quot;平均分&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num_subjects):</span><br><span class="line">    subject = [int(score[i + 1]) <span class="keyword">for</span> score <span class="keyword">in</span> scores]</span><br><span class="line">    avg_score = <span class="built_in">sum</span>(subject) / len(subject)</span><br><span class="line">    avg_scores.append(str(round(avg_score, 2)))</span><br><span class="line">header.append(<span class="string">&quot;总分&quot;</span>)</span><br><span class="line">with open(<span class="string">&quot;score1.csv&quot;</span>, <span class="string">&#x27;w&#x27;</span>) as file:</span><br><span class="line">    file.write(<span class="string">&#x27;,&#x27;</span>.<span class="built_in">join</span>(header) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> scores:</span><br><span class="line">        file.write(<span class="string">&#x27;,&#x27;</span>.<span class="built_in">join</span>(i) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    file.write(<span class="string">&#x27;,&#x27;</span>.<span class="built_in">join</span>(avg_scores))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/31/hello-world/"/>
      <url>/2024/05/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Bug0052博客报错</title>
      <link href="/2024/05/24/Bug0052%E5%8D%9A%E5%AE%A2%E6%8A%A5%E9%94%99/"/>
      <url>/2024/05/24/Bug0052%E5%8D%9A%E5%AE%A2%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p>[Bug0052] Hexo+Butterfly博客报错extends includes&#x2F;layout.pug block content include .&#x2F;includes&#x2F;mixins&#x2F;post…</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>更换新主题Butterfly</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">$ npm install hexo-deployer-git --save / yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s -p 4000</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>和女朋友日常</title>
      <link href="/2024/05/01/girlfriend/"/>
      <url>/2024/05/01/girlfriend/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e40ca24c8b9ac09e75beac5833590e02add423ea110149e1cf6c6f4d6a9d83fe">a6a93abe15165915212295988115e6bba71e2ba33876005c9781adb2bcdff2c1a10f24fa28369cb20979622e77494b92ad3f0da36ab8e40e57e1c0db57b17c42f14b46f78ab1bc482e35ff733d91380f30c40893f154f806c0113c63f01af538ac323e62cef04b119c2730cd0556b619b4a0d92f1524be48eaac4239a3b88c6c0b282b85b7192f7a340dd98f5f8de69756b4c239b164ea4aa9c7ba9705ff5bf43aa85559ebe7b55b93b01712f89a6f7e1db37d6484f846dbefa3143c5dfa94d10162247dec62b6211dcebaa40563892e6dfc18b5745acf822804a9a1d022a90c983af878dc49e1fc25f85a41272945536c1fb1e8f8a43ae23087ccea68872d5b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 作为日记加密 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
